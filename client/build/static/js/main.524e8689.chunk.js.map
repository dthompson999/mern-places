{"version":3,"sources":["components/Display.jsx","components/PlaceForm.jsx","components/Detail.jsx","components/Edit.jsx","App.js","serviceWorker.js","index.js"],"names":["Display","props","useState","places","setPlaces","getPlaces","axios","get","then","res","console","log","data","catch","err","useEffect","className","map","p","i","key","name","type","to","_id","onClick","e","delete","PlaceForm","setName","setType","note","setNote","errors","setErrors","onSubmit","preventDefault","newPlace","post","navigate","onChange","target","value","properties","message","Detail","details","setDetails","style","fontWeight","moment","createdAt","format","width","height","frameborder","border","src","place","put","App","path","Edit","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.524e8689.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from '@reach/router';\n\nconst Display = props => {\n\n    const [places, setPlaces] = useState([]);\n\n    const getPlaces = () => {\n        axios.get(\"http://localhost:8000/api/place\")\n            .then( res => {\n                console.log(res);\n                setPlaces(res.data)\n            })\n            .catch( err => console.log(err));\n    }\n\n    useEffect( () => {\n        getPlaces();\n    }, []);\n\n    const remove = _id => {\n        console.log(_id);\n        axios.delete(`http://localhost:8000/api/place/delete/${_id}`)\n            .then( res => {\n                console.log(res);\n                getPlaces();\n            })\n            .catch( err => console.log(err));\n    }\n\n    return (\n        <div>\n            <div className=\"container mt-5\">\n                <table className=\"table table-striped table-hover table-dark\">\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th>Place</th>\n                            <th>Type</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {places.map( (p, i) => \n                        <tr key={i}>\n                            <td>{p.name}</td>\n                            <td>{p.type}</td>\n                            <td>\n                                <Link className=\"btn btn-sm btn-outline-primary mr-2 mt-1 mb-1\" to={`/place/${p._id}`}>View</Link>\n                                <Link className=\"btn btn-sm btn-outline-warning mr-2 mt-1 mb-1\" to={`/place/update/${p._id}`}>Edit</Link>\n                                <button className=\"btn btn-sm btn-outline-danger mr-2 mt-1 mb-1\" onClick={e => remove(p._id)}>Delete</button>\n                            </td>\n                        </tr>\n                    )}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default Display;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { navigate } from '@reach/router'\n\nconst PlaceForm = props => {\n\n    const[name, setName] = useState(\"\");\n    const[type, setType] = useState(\"\");\n    const[note, setNote] = useState(\"\");\n    const[errors, setErrors] = useState({});\n\n    const create = e => {\n        e.preventDefault();\n        const newPlace = {name, type, note};\n\n        axios.post(\"http://localhost:8000/api/place/new\", newPlace)\n            .then(res => {\n                console.log(res);\n                if(res.data.errors) {\n                    setErrors(res.data.errors);\n                } else {\n                    navigate(\"/places\");\n                }\n            }).catch(err => console.log(err));\n    }\n\n    return (\n        <form onSubmit={ create }>\n            <div className=\"container mt-5\">\n                <div className=\"row\">\n                    <div className=\"col-sm-4\">\n                        <div className=\"form-group text-white\">\n                            <label>Name of Place</label>\n                            <input type=\"text\" className=\"form-control\" onChange={ e => setName(e.target.value)} />\n                            {errors.name ? <p className=\"text-danger\">{errors.name.properties.message}</p>: \"\"}\n                        </div>\n                    </div>\n                    <div className=\"col-sm-2\">\n                        <div className=\"form-group text-white\">\n                            <label>Type</label>\n                            <input type=\"text\" className=\"form-control\" onChange={ e => setType(e.target.value)}/>\n                            {errors.type ? <p className=\"text-danger\">{errors.type.properties.message}</p>: \"\"}\n                        </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                        <div className=\"form-group text-white\">\n                            <label>Notes</label>\n                            <input type=\"text\" className=\"form-control\" onChange={ e => setNote(e.target.value)} />\n                        </div>\n                    </div>\n                    <input type=\"submit\" className=\"btn btn-primary btn-block mb-5 mr-2 ml-2\" value=\"Add Place\"/>\n                </div>\n            </div>\n        </form>\n    )\n\n}\n\nexport default PlaceForm;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Link, navigate} from '@reach/router'\n\nconst Detail = (props) => {\n\n    const [details, setDetails] = useState({});\n\n    useEffect( () => {\n        axios.get(`http://localhost:8000/api/place/${props._id}`)\n            .then( res => {\n                console.log(res);\n                setDetails(res.data);\n            })\n            .catch(err => console.log(err));\n    }, [props._id]);\n\n    const remove = () => {\n        axios.delete(`http://localhost:8000/api/place/delete/${props._id}`)\n            .then(res => {\n                console.log(res);\n                navigate(\"/places\");\n            })\n            .catch(err => console.log(err));\n    }\n\n    return (\n        <div>\n            <div className=\"container\">\n                <div className=\"card mt-5\">\n                    <div className=\"card-header bg-primary text-white\">\n                        <div className=\"row\">\n                            <div className=\"col mt-2\">\n                                <Link className=\"btn btn-success\" to={`/place/update/${details._id}`}>Edit</Link>\n                            </div>\n                            <div className=\"col mt-2\">\n                                <h2>{details.name} Details</h2>\n                            </div>\n                            <div className=\"col mt-2\">\n                                <button className=\"btn btn-danger\" onClick={remove}>Remove</button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"card-body border-bottom border-primary\">\n                        <p><span style={{fontWeight: 'bold'}}>Place Type:</span> {details.type}</p>\n                        <p><span style={{fontWeight: 'bold'}}>Notes:</span> {details.note}</p>\n                        <p><span style={{fontWeight: 'bold'}}>Date added to Places:</span> {moment(details.createdAt).format('MMMM Do YYYY, h:mm a')}</p>\n                        {/* <p><span style={{fontWeight: 'bold'}}>Database ID:</span> {details._id}</p> */}\n                    </div>\n                    <div className=\"embed-responsive embed-responsive-16by9\">\n                            <iframe name=\"gMap\"\n                                width=\"450\"\n                                height=\"250\"\n                                frameborder=\"0\" style={{border:0}}\n                                src={`https://www.google.com/maps/embed/v1/place?q=${ details.name }&key=AIzaSyD4XOAzAwR9ehNWvcYN_AN_gRvbAbWuT3I&`}>\n                            </iframe>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Detail;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { navigate } from '@reach/router'\n\nconst PlaceForm = props => {\n\n    const[name, setName] = useState(\"\");\n    const[type, setType] = useState(\"\");\n    const[note, setNote] = useState(\"\");\n    const[errors, setErrors] = useState({});\n\n    useEffect( () => {\n        axios.get(`http://localhost:8000/api/place/${props._id}`)\n            .then(res => {\n                console.log(res);\n                setName(res.data.name);\n                setType(res.data.type);\n                setNote(res.data.note);\n            }).catch(errors => console.log(errors));\n    }, [props._id]);\n\n    const UpdatePlace = e => {\n        e.preventDefault();\n        const place = {name, type, note};\n        axios.put(`http://localhost:8000/api/place/update/${props._id}`, place)\n            .then(res => {\n                console.log(res);\n                if(res.data.errors) {\n                    setErrors(res.data.errors);\n                } else {\n                    navigate(\"/places\");\n                }\n            }).catch(err => console.log(err));\n    }\n\n    return (\n        <form onSubmit={ UpdatePlace }>\n            <div className=\"container mt-5\">\n                <div className=\"row\">\n                    <div className=\"col-sm-4\">\n                        <div className=\"form-group text-white\">\n                            <label>Name of Place</label>\n                            <input type=\"text\" className=\"form-control\" onChange={ e => setName(e.target.value)} value={name}/>\n                            {errors.name ? <p className=\"text-danger\">{errors.name.properties.message}</p>: \"\"}\n                        </div>\n                    </div>\n                    <div className=\"col-sm-2\">\n                        <div className=\"form-group text-white\">\n                            <label>Type</label>\n                            <input type=\"text\" className=\"form-control\" onChange={ e => setType(e.target.value)} value={type}/>\n                            {errors.type ? <p className=\"text-danger\">{errors.type.properties.message}</p>: \"\"}\n                        </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                        <div className=\"form-group text-white\">\n                            <label>Notes</label>\n                            <input type=\"text\" className=\"form-control\" onChange={ e => setNote(e.target.value)} value={note}/>\n                        </div>\n                    </div>\n                    <input type=\"submit\" className=\"btn btn-primary btn-block mb-5 mr-2 ml-2\" value=\"Update Place\"/>\n                </div>\n            </div>\n        </form>\n    )\n\n}\n\nexport default PlaceForm;","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Display from './components/Display';\nimport PlaceForm from './components/PlaceForm';\nimport Detail from './components/Detail';\nimport Edit from './components/Edit';\nimport { Link, Router } from '@reach/router';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container pt-5\">\n        <div className=\"tex-center\">\n          <div className=\"jumbotron\">\n            <h1>welcome to Places!</h1>\n            <hr/>\n            <h3>Add a Place you want to remember to return to...</h3>\n          </div>\n          <Link className=\"btn btn-warning btn-outline-dark mr-2\" to=\"/\">New Place</Link>\n          <Link className=\"btn btn-warning btn-outline-dark\" to=\"/places\">Places List</Link>\n        </div>\n      </div>\n        <Router>\n          <PlaceForm path=\"/\"/>\n          <Display path=\"/places\" />\n          <Detail path=\"/place/:_id\" />\n          <Edit path=\"/place/update/:_id\"/>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}